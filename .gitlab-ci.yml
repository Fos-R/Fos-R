build:amd64:
  tags:
    - ci.inria.fr
    - small
  stage: build
  image: rust
  script:
    - apt update
    # version without network injection
    - cargo build --no-default-features -p fosr
    # version without ebpf
    - cargo build --no-default-features --features iptables -p fosr
    # version with ebpf
    - rustup toolchain install nightly --component rust-src
    - cargo install bpf-linker
    - cargo build --features iptables # version with ebpf + iptables
    - cargo build # version with ebpf only
    - cargo build --release
    - cargo install cargo-deb
    - cargo deb -p fosr
    # cross-compilation (x86 32 bits)
    - apt install -y gcc-i686-linux-gnu
    - rustup target add i686-unknown-linux-gnu
    # Aya doesnâ€™t compile for some reason
    - cargo build --target=i686-unknown-linux-gnu --config target.i686-unknown-linux-gnu.linker=\"i686-linux-gnu-gcc\" -p fosr -r --no-default-features
    - cargo deb --target=i686-unknown-linux-gnu -p fosr --no-default-features -- --config target.i686-unknown-linux-gnu.linker=\"i686-linux-gnu-gcc\"
    # cross-compilation (arm 32 bits with musl)
    - apt install -y gcc-arm-linux-gnueabihf
    - rustup target add arm-unknown-linux-musleabihf
    - cargo build --target=arm-unknown-linux-musleabihf --config target.arm-unknown-linux-musleabihf.linker=\"arm-linux-gnueabihf-gcc\" -p fosr -r
    - cargo deb --target=arm-unknown-linux-musleabihf -p fosr -- --config target.arm-unknown-linux-musleabihf.linker=\"arm-linux-gnueabihf-gcc\"
    # cross-compilation (arm 64 bits with libc)
    - apt install -y gcc-aarch64-linux-gnu
    - rustup target add aarch64-unknown-linux-gnu
    - cargo build --target=aarch64-unknown-linux-gnu --config target.aarch64-unknown-linux-gnu.linker=\"aarch64-linux-gnu-gcc\" -p fosr -r
    - cargo deb --target=aarch64-unknown-linux-gnu -p fosr -- --config target.aarch64-unknown-linux-gnu.linker=\"aarch64-linux-gnu-gcc\"
    # cross-compilation (windows, WIP)
    # - apt install -y binutils-mingw-w64-x86-64 gcc-mingw-w64
    # - rustup target add x86_64-pc-windows-gnu
    # - cargo build --target=x86_64-pc-windows-gnu -p fosr -r --no-default-features
    # cross-compilation (FreedBSD, WIP)
    # - rustup target add x86_64-unknown-freebsd
    # - cargo build --target=x86_64-unknown-freebsd --config target.x86_64-unknown-freebsd.linker=\"arm-linux-gnueabihf-gcc\" -p fosr -r
  artifacts:
    paths:
      - target/debug/fosr
      - target/release/fosr

rustdoc:
  tags:
    - ci.inria.fr
    - small
  stage: build
  image: rust
  script:
    - rustup toolchain install nightly --component rust-src
    - cargo install bpf-linker
    - cargo doc --no-deps
  artifacts:
    paths:
      - target/doc

tests:
  tags:
    - ci.inria.fr
    - small
  stage: test
  image: rust
  script:
    - rustup toolchain install nightly --component rust-src
    - cargo install bpf-linker
    - cargo test -- --nocapture
  artifacts:
    paths:
      - crates/fosr/deterministic-test.pcap

evalzeek:
  image: zeek/zeek
  tags:
    - ci.inria.fr
    - small
  stage: test
  needs: tests
  script:
    - mkdir analysis-zeek
    - cd analysis-zeek
    - zeek -r ../deterministic-test.pcap
  artifacts:
    paths:
      - crates/fosr/analysis-zeek


# TODO: stage for generation & evaluation, and deploying generated pcap

pages:
  image: alpine
  tags:
    - ci.inria.fr
    - small
  stage: deploy
  pages:
    publish: public
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  script:
    - mkdir -p public
    - mv target/doc public/doc
    - mv target/release/fosr public/fosr
  artifacts:
    paths:
      - public

