stages:
  - build
  - test
  - analyze
  - deploy

build-doc:
  tags:
    - ci.inria.fr
    - small
  stage: build
  image: rust
  script:
    - cargo doc --no-deps
    - mv target/doc doc
  artifacts:
    paths:
      - doc

build-x86-64:
  tags:
    - ci.inria.fr
    - large
  stage: build
  image: rust
  script:
    # version without network injection
    - cargo build --no-default-features -p fosr
    # version without ebpf and with iptables
    - cargo build --no-default-features --features iptables -p fosr
    # version with ebpf
    - rustup toolchain install nightly --component rust-src
    - cargo install bpf-linker
    - cargo build # version with ebpf only
    - cargo build --features iptables --release # version with ebpf + iptables
    - cargo install cargo-deb
    - cargo deb -p fosr
    - mkdir target/x86_64-unknown-linux-gnu
    - mv target/release target/x86_64-unknown-linux-gnu
  artifacts:
    paths:
      - target/*/release/fosr
      - target/debian/*.deb

build-x86-32:
  tags:
    - ci.inria.fr
    - large
  stage: build
  image: rust
  script:
    - apt update
    - apt install -y gcc-i686-linux-gnu
    - rustup target add i686-unknown-linux-gnu
    # Aya doesnâ€™t compile for some reason
    - cargo build --target=i686-unknown-linux-gnu --config target.i686-unknown-linux-gnu.linker=\"i686-linux-gnu-gcc\" -p fosr -r --no-default-features --features iptables
    - cargo deb --target=i686-unknown-linux-gnu -p fosr --no-default-features --features iptables -- --config target.i686-unknown-linux-gnu.linker=\"i686-linux-gnu-gcc\"
  artifacts:
    paths:
      - target/*/release/fosr
      - target/debian/*.deb

build-ARM-32:
  tags:
    - ci.inria.fr
    - large
  stage: build
  image: rust
  script:
    - rustup toolchain install nightly --component rust-src
    - cargo install bpf-linker
    - apt update
    - apt install -y gcc-arm-linux-gnueabihf
    - rustup target add arm-unknown-linux-musleabihf
    - cargo build --target=arm-unknown-linux-musleabihf --config target.arm-unknown-linux-musleabihf.linker=\"arm-linux-gnueabihf-gcc\" -p fosr -r --features iptables
    - cargo deb --target=arm-unknown-linux-musleabihf -p fosr --features iptables -- --config target.arm-unknown-linux-musleabihf.linker=\"arm-linux-gnueabihf-gcc\"
  artifacts:
    paths:
      - target/*/release/fosr
      - target/debian/*.deb

build-ARM-64:
  tags:
    - ci.inria.fr
    - large
  stage: build
  image: rust
  script:
    - rustup toolchain install nightly --component rust-src
    - cargo install bpf-linker
    - apt update
    - apt install -y gcc-aarch64-linux-gnu
    - rustup target add aarch64-unknown-linux-gnu
    - cargo build --target=aarch64-unknown-linux-gnu --config target.aarch64-unknown-linux-gnu.linker=\"aarch64-linux-gnu-gcc\" -p fosr -r --features iptables
    - cargo deb --target=aarch64-unknown-linux-gnu -p fosr --features iptables -- --config target.aarch64-unknown-linux-gnu.linker=\"aarch64-linux-gnu-gcc\"
  artifacts:
    paths:
      - target/*/release/fosr
      - target/debian/*.deb

# WIP
# build-win64:
#   tags:
#     - ci.inria.fr
#     - large
#   stage: build
#   image: rust
#   script:
#     - apt install -y binutils-mingw-w64-x86-64 gcc-mingw-w64
#     - rustup target add x86_64-pc-windows-gnu
#     - cargo build --target=x86_64-pc-windows-gnu -p fosr -r --no-default-features
#   artifacts:
#     paths:
#       - target/*/release/fosr

# WIP
# build-freebsd:
#   tags:
#     - ci.inria.fr
#     - large
#   stage: build
#   image: rust
#   script:
#     - rustup target add x86_64-unknown-freebsd
#     - cargo build --target=x86_64-unknown-freebsd --config target.x86_64-unknown-freebsd.linker=\"arm-linux-gnueabihf-gcc\" -p fosr -r
#   artifacts:
#     paths:
#       - target/*/release/fosr

tests:
  tags:
    - ci.inria.fr
    - large
  stage: test
  image: rust
  script:
    # generation only, so no need for ebpf
    - cargo test -p fosr --no-default-features -- --nocapture
    - mv crates/fosr/deterministic-test.pcap sample.pcap
  artifacts:
    paths:
      - sample.pcap

eval-zeek:
  image: zeek/zeek
  tags:
    - ci.inria.fr
    - small
  stage: analyze
  script:
    - mkdir analysis-zeek
    - cd analysis-zeek
    - zeek -r ../sample.pcap
  artifacts:
    paths:
      - analysis-zeek

eval-tshark:
  image: alpine
  tags:
    - ci.inria.fr
    - small
  stage: analyze
  script:
    - apk add tshark
    - mkdir analysis-tshark
    - capinfos sample.pcap > analysis-tshark/capinfos.txt
    - tshark -r sample.pcap > analysis-tshark/summary_per_pkt.txt
    - tshark -r sample.pcap -z expert -q > analysis-tshark/expert.txt
    - tshark -r sample.pcap -z conv,ip -q > analysis-tshark/conv_ip.txt
    - tshark -r sample.pcap -z conv,udp -q > analysis-tshark/conv_udp.txt
    - tshark -r sample.pcap -z conv,tcp -q > analysis-tshark/conv_tcp.txt
  artifacts:
    paths:
      - analysis-tshark

eval-suricata:
  image: alpine
  tags:
    - ci.inria.fr
    - small
  stage: analyze
  script:
    - apk add suricata
    - mkdir analysis-suricata
    - cd analysis-suricata
    - suricata -c /etc/suricata/suricata.yaml -r ../sample.pcap > analysis.txt
  artifacts:
    paths:
      - analysis-suricata


pages:
  image: alpine
  tags:
    - ci.inria.fr
    - small
  stage: deploy
  pages:
    publish: public
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  script:
    - apk add pandoc
    - mv doc public/
    - mv target public/bin
    - mv analysis* public/
    - mv sample.pcap public/
    - cp resources/logo.png public/
    - cd public
    - echo -e "\nBuild version $CI_COMMIT_SHORT_SHA, compiled on $(date -I).\n" >> intro.md
    - echo -e "\n## Analyzed pcap sample\n" > analysis.md
    - find . -type f -name "*.pcap" -exec echo "- [{}]({})" \; >> analysis.md
    - echo -e "\n## Zeek analysis\n" >> analysis.md
    - find "analysis-zeek" -type f -exec echo "- [{}]({})" \; >> analysis.md
    - echo -e "\n## TShark analysis\n" >> analysis.md
    - find "analysis-tshark" -type f -exec echo "- [{}]({})" \; >> analysis.md
    - echo -e "\n## Suricata analysis\n" >> analysis.md
    - find "analysis-suricata" -type f -exec echo "- [{}]({})" \; >> analysis.md
    - pandoc intro.md compile.md howto.md roadmap.md usecases.md analysis-intro.md analysis.md refs.md -o index.html --template template.html --include-after-body footer.html --standalone --no-highlight --toc --toc-depth 2 --mathjax
  artifacts:
    paths:
      - public

